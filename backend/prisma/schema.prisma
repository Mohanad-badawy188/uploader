// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int   @id @default(autoincrement())
  name      String  
  email     String  @unique
  password  String  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
  files      File[]
  notifications Notification[]
  activities UserActivity[]

  @@map("users")
}


model File {
  id            String   @id @default(uuid())
  originalName  String
  path          String
  mimetype      String
  size          Int
  status        String   @default("pending")
  extractedText String?  @db.Text
  userId        Int     
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  thumbnail     String?  
  notifications Notification[]

  @@map("files")
}
model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  fileId    String
  message   String
  status    String   @default("unread")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  file      File     @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("notification")
}
model UserActivity {
  id        String   @id @default(cuid())
  userId    Int
  action    String
  details   String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}
enum Role {
  USER
  ADMIN
}